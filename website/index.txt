h1. ebay_shopping

h1. &#x2192; 'ebay_shopping'


h2. What

A Ruby library for the fast-and-simple ebay Shopping API. For details see the Introduction, or the README file. There's also a blog post detailing usage at: "http://pushrod.wordpress.com/2008/01/13/a-rubyonrails-library-for-the-ebay-shopping-api/":http://pushrod.wordpress.com/2008/01/13/a-rubyonrails-library-for-the-ebay-shopping-api/

Unlike the trading API ("http://developer.ebay.com/products/trading/":http://developer.ebay.com/products/trading/), the shopping API is only for retrieval of information, not for posting items, or bidding on them.

If you need that sort of thing, check out Cody Fauser's gem for the trading API ("http://code.google.com/p/ebay/":http://code.google.com/p/ebay/). If you don't, the Shopping API is simpler, leaner, and quite a bit faster too.

ebay_shopping was developed by "Chris Taggart for Autopendium :: Stuff about old cars":http://autopendium.com, a classic car community site. It's still in development, and news of updates will be posted at "http://pushrod.wordpress.com":http://pushrod.wordpress.com

h2. Installing

<pre syntax="ruby">sudo gem install ebay_shopping</pre>

Then, in the configuration section of your application, initialize the EbayShopping::Request config_params, by passing either a YAML file with values for different environments, or with a hash containing your app_id, affiliate_code etc.

In a Rails application, for example, you'd probably put a ebay.yml file in your config folder and then in environment.rb:
<pre syntax="ruby">EbayShopping::Request.config_params("#{RAILS_ROOT}/config/ebay.yml", RAILS_ENV)</pre>

In the console (for example) you'd probably pass a hash like so:
<pre syntax="ruby">EbayShopping::Request.config_params({:app_id => "my_app_id", :default_site_id =>"3"})</pre>

See below for more info of the config params

h2. The basics

<pre syntax="ruby">
require 'ebay_shopping'

request = EbayShopping::Request.new(:find_items, {:query_keywords => "chevrolet camaro"}) 
# use "ruby-ized" version of Ebay API calls and params

response = request.response

items_for_sale = response.items

items_for_sale.first.title # => "Chevrolet Camaro"

items_for_sale.first.view_item_url_for_natural_search 
# => "http://cgi.ebay.com/Chevrolet-Camaro_W0QQitemZ290197239377QQcategoryZ6161QQcmdZViewItemQQ"

items_for_sale.first.gallery_url # => "http://thumbs.ebaystatic.com/pict/290197239377.jpg"

items_for_sale.first.converted_current_price.to_s # => "$38000.00"
...etc
</pre>

h2. Demonstration of usage

For more methods and more details see the test suite, the comments with the class and method definitions, or wait for me to write more stuff.

h2. Forum

"http://groups.google.com/group/ebay_shopping":http://groups.google.com/group/ebay_shopping

TODO - create Google Group - ebay_shopping

h2. How to submit patches

Read the "8 steps for fixing other people's code":http://drnicwilliams.com/2007/06/01/8-steps-for-fixing-other-peoples-code/ and for section "8b: Submit patch to Google Groups":http://drnicwilliams.com/2007/06/01/8-steps-for-fixing-other-peoples-code/#8b-google-groups, use the Google Group above.

You can fetch the source from:

* github: "http://github.com/ctagg/ebay_shopping/tree/master":http://github.com/ctagg/ebay_shopping/tree/master

<pre>git clone git://github.com/ctagg/ebay_shopping.git</pre>

h2. License

This code is free to use under the terms of the MIT license. 

h2. Contact

Comments are welcome. Send an email to "Chris Taggart":mailto:chris.taggart@pushrodmedia.co.uk email via the "forum":http://groups.google.com/group/ebay_shopping

